Package Arbre_genealogique
procedure Initialiser_Arbre(A : out T_Arbre_Genealogique)
      Post=> A=Null;
   procedure Ajouter(A: in out T_Arbre_Genealogique,R: in out T_Registre,Info: in T_Information,Cle_parent: in T_Cle ,Cle_enfant: in Integer);
      --exception Est_Absent_Cle dans le cas ou Cle_enfant n'existe pas.

   function Obtenir_nb_ancetres(A: in T_Arbre_Genealogique, Cle: in Integer) return Integer;
      --exception Est_Absent_Cle dans le cas ou Cle n'existe pas.

   function Obtenir_nb_ancetres_Gen(A : in T_Arbre_Genealogique, Cle: in Integer, Gen : in Integer) return Liste
      --exception Est_Absent_Cle dans le cas ou Cle n'existe pas.

   procedure Afficher_Arbre(A : in T_Arbre_Genealogique, Cle : in Integer)
      --exception Est_Absent_Cle dans le cas ou Cle n'existe pas.

   procedure Supprimer_Noeud(A : in out T_Arbre_Genealogique, Cle : in Integer)
      --exception Est_Absent_Cle dans le cas ou Cle n'existe pas.

   function Un_Parent(A: in T_Arbre_Genealogique) return Liste

   function Deux_Parents(A:in T_Arbre_Genealogique) return Liste

   function Aucun_Parent(A : in T_Arbre_Genealogique) return Liste

   function Ancetres_Gen(A : in T_Arbre_Genealogique, Gen: in Integer) return Liste

   function Homonyme(A: in T_Arbre_Genealogique, n: in Integer, m: in Integer) return Bool√©en

   procedure Modifier(
