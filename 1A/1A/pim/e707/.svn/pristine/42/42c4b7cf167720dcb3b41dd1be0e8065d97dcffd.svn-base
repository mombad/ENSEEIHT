with Arbre_Binaire;
with Ada.Text_IO;            use Ada.Text_IO;
with Ada.Integer_Text_IO;    use Ada.Integer_Text_IO;
with Ada.Unchecked_Deallocation;
with Piles;

procedure utiliser_arbre is
   package arbre_entier is
     new arbre_binaire(T_Cle => Integer);
   use arbre_entier;
   procedure afficher(Cle: in integer;esp : in integer) is
   begin
      put(Cle,esp);
   end afficher;
   procedure afficher_arbre is new arbre_entier.Afficher_Arbre(afficher);
   procedure ajouter is new arbre_entier.ajouter(afficher);

   A: T_Arbre_Binaire;
   Cle : Integer;
begin
   Initialiser_Arbre(A,10);
   ajouter(A,11,10,True);
   ajouter(A,12,11,True);
   ajouter(A,13,11,False);
   ajouter(A,14,10,False);
   ajouter(A,9,13,True);
   ajouter(A,15,14,True);

   if est_present(A,1) then
      put("ok");
   else
      put("non");
   end if;

  -- Supprimer_Noeud(A,13);

   --supprimer_Noeud(A,13);
   Afficher_Arbre(A);
end utiliser_arbre;
