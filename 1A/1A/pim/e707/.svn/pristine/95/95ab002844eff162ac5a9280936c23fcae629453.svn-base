with lien;
use lien;
with registre;
use registre;

Package Arbre_genealogique is

    type Liste is limited private; 
    type T_Arbre_Gen is limited private;
    
    procedure Initialiser_Arbre_Gen(A : out T_Arbre_Gen;R: out T_Registre);


    procedure Ajouter_Arbre_Gen(A: in out T_Arbre_Gen;R: in out T_Registre; Cle_parent: in Integer ;Cle_enfant: in Integer; Choix: in boolean);
    --Exception Est_Absent_Cle dans le cas ou Cle_enfant n'existe pas.
    --Exception Est_Present_Cle dans le cas ou le parent existe d√©ja.

    
    function Obtenir_nb_ancetres(A: in T_Arbre_Gen; Cle: in Integer) return Integer;
      --Exception Est_Absent_Cle dans le cas ou Cle n'existe pas.

    
    function Obtenir_nb_ancetres_Gen(A : in T_Arbre_Gen; Cle: in Integer; Gen : in Integer) return Liste;
      --Exception Est_Absent_Cle dans le cas ou Cle n'existe pas.

    
    procedure Afficher_Arbre_Gen(A : in T_Arbre_Gen; Cle : in Integer);
      --Exception Est_Absent_Cle dans le cas ou Cle n'existe pas.

    
    procedure Supprimer_Noeud(A : in out T_Arbre_Gen; Cle : in Integer);
      --Exception Est_Absent_Cle dans le cas ou Cle n'existe pas.

    
    function Un_Parent(A: in T_Arbre_Gen) return Liste;

    function Deux_Parents(A:in T_Arbre_Gen) return Liste;

    
    function Aucun_Parent(A : in T_Arbre_Gen) return Liste;

    
    function Ancetres_Gen(A : in T_Arbre_Gen; Gen: in Integer) return Liste;

    
    function Homonyme(A: in T_Arbre_Gen;R: in T_Registre; n: in Integer; m: in Integer) return Boolean;

    
    procedure Detruire(A:in out T_Arbre_Gen);   
    
    
    function Est_Present_Gen(A: in T_Arbre_Gen; Cle: in Integer) return Boolean;

    
    
    
    
    --Manipulation des listes
    procedure Initialiser_Liste(L: out Liste);
    
    procedure Afficher_Liste(L:in Liste);
    
    procedure Ajouter_Liste(L: in out Liste;Element:in Integer);
    
    procedure Vider_Liste(L:in out Liste;Element: in Integer);
    
    function Est_Present_Liste(L: in Liste; Element: in Integer) return Boolean;
    
    
private
    type T_Arbre_Gen is new T_Arbre_Binaire;
    type Cellule;

    type Liste is access cellule;
    type cellule is 
        record
        Cle: Integer;
        suivant : Liste;
        end record;
 
 
    
 
    
    
end Arbre_genealogique;

    
            
            
        
