R0: -Réaliser la partie 1.

R1: -Créer une interface conviviale pour l'utilisateur.
    -Créer le type arbre généalogique dont les noeuds contiennent un identifiant unique et les ancêtres.
    -Définir les opérations de manipulations.
    -Créer un registre état civil générique contenant au minimum l'identifiant unique de chaque individu.

R2: -Raffinage de "Créer une interface conviviale pour l'utilisateur."

-Afficher la liste des opérations possibles
-Inviter l'utilisateur à entrer sa réponse
-Afficher l'option choisie


    -Raffinage de "Créer le type arbre généalogique dont les noeuds contiennent un identifiant unique et les ancêtres."

-Type T_Arbre_Binaire est un type très privé.
-Type T_Arbre_Binaire est un pointeur sur T_Cellule_Arbre.
-Type T_Cellule_Arbre est cellule contenant une clé, un pointeur T_Arbre_Binaire père et un pointeur T_Arbre_Binaire mère.



    -Raffinage de "Définir les opérations de manipulations."

- procedure Initialiser_Arbre(A : out T_Arbre_Binaire)
    Post=> A=Null

- procedure Ajouter(A: in out T_Arbre_Binaire,R: in out T_Registre,Info: in T_Information,Cle_parent: in Entier,Cle_enfant: in Entier)
    --exception Est_Absent_Cle dans le cas ou Cle_enfant n'existe pas.

- function Obtenir_nb_ancetres(A: in T_Arbre_Binaire, Cle: in Entier) retourne Entier
    --exception Est_Absent_Cle dans le cas ou Cle n'existe pas.

- function Obtenir_nb_ancetres_Gen(A : in T_Arbre_Binaire, Cle: in Entier, Gen : in Entier) retourne Entier
    --exception Est_Absent_Cle dans le cas ou Cle n'existe pas.

- procedure Afficher_Arbre(A : in T_Arbre_Binaire, Cle : in Entier)
    --exception Est_Absent_Cle dans le cas ou Cle n'existe pas.

- procedure Supprimer_Noeud(A : in out T_Arbre_Binaire, Cle : in Entier)
    --exception Est_Absent_Cle dans le cas ou Cle n'existe pas.

- function Un_Parent(A: in T_Arbre_Binaire) retourne Liste

- function Deux_Parents(A:in T_Arbre_Binaire) retourne Liste

- function Aucun_Parent(A : in T_Arbre_Binaire) retourne Liste

- function Ancetres_Gen(A : in T_Arbre_Binaire, Gen: in Entier) retourne Liste

- function Homonyme(A: in T_Arbre_Binaire, n: in Entier, m: in Entier) retourne Booléen



    -Raffinage de "Créer un registre état civil générique contenant au minimum l'dientifiant unique de chaque individu."

-Type T_Registre est très privé.
-Type T_Registre est un pointeur sur T_Cellule_Registre.
-Type T_Cellule_Registre est une cellule contenant une clé, un type T_Information générique et un pointeur T_Registre pour la case suivante.
