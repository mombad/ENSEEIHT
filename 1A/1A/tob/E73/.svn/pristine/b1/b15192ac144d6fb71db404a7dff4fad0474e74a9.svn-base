package principal;

import java.util.ArrayList;
import java.util.Random;

import fenetre.FenetreJeu;
import territoires.*;


public class Main {

	private static final String[] nomFactions = {"Vikings", "Romains", "Egyptiens"};
	private static int nbLignes = 10, nbColonnes = 10, nbFactions = 3, taillePanelCentral = 400;
	
	public static int getTaillePanelCentral() {
		return taillePanelCentral;
	}


	public static void setTaillePanelCentral(int taillePanelCentral) {
		Main.taillePanelCentral = taillePanelCentral;
	}





	private static String chemin = "src/images/";
	private static Territoire[][] mat_territoires;

	public static int getNbLignes() {
		return nbLignes;
	}


	public static void setNbLignes(int nbLignes) {
		Main.nbLignes = nbLignes;
	}


	public static int getNbColonnes() {
		return nbColonnes;
	}


	public static void setNbColonnes(int nbColonnes) {
		Main.nbColonnes = nbColonnes;
	}


	public static Territoire[][] getMat_Territoires() {
		return mat_territoires;
	}


	public static void setMat_Territoires(Territoire[][] mat_territoires) {
		Main.mat_territoires = mat_territoires;
	}


	public static int getNbFactions() {
		return nbFactions;
	}


	public static void setNbFactions(int nbFactions) {
		Main.nbFactions = nbFactions;
	}


	public static String getChemin() {
		return chemin;
	}


	public static void setChemin(String chemin) {
		Main.chemin = chemin;
	}





	public static void main(String[] args) {
		//TODO passer en argument, garder comme Ã§a pour les tests
		//Generer la carte
		Main.mat_territoires = genererCarte(nbLignes,nbColonnes, nbFactions);
		
		ArrayList<Faction> factions = new ArrayList<>();
		for (int i = 0 ; i < nbFactions ; i++) {
			factions.add(new Faction(nomFactions[i]));
		}
		
		// CrÃ©ation de la carte du monde
				// Attribution aléatoire des capitales
		for (Territoire[] ligne : mat_territoires) {
			for (Territoire t : ligne) {
				if (t instanceof Capitale) {
					Random rand = new Random();
					int r = rand.nextInt(nbFactions);
					t.setFaction(factions.get(r));
					factions.get(r).addTerritoire(t);
					factions.remove(r);
					nbFactions--;
				}
			}
		}
		
		 new FenetreJeu(mat_territoires,3,3);
	}
	
	
		 
	
	
	/** GÃ©nÃ©ration de la carte du monde.
	 * 
	 * @param nblignes
	 * @param nbcolonnes
	 * @param nbFactions
	 * @return La carte du monde (matrice de territoires)
	 */
	public static Territoire[][] genererCarte(int nblignes, int nbcolonnes, int nbFactions){
		Territoire[][] territoires = new Territoire[nblignes][nbcolonnes];
		// Instanciation des territoires
		for (int ligne = 0 ; ligne < nblignes ; ligne++) {
			for (int colonne = 0 ; colonne < nbcolonnes ; colonne++) {
				//TODO : Temporaire
				if (ligne == 0 && colonne == 0) {
					territoires[ligne][colonne] = new Capitale("Ligne : " + ligne + " / colonne : " + colonne);
				} else {
					territoires[ligne][colonne] = new Territoire("Ligne : " + ligne + " / colonne : " + colonne);
				}
			}
		}
		// Ajout des voisins
		for (int ligne = 0 ; ligne < nblignes ; ligne++) {
			for (int colonne = 0 ; colonne < nbcolonnes ; colonne++) {
				if (ligne != 0) {
					territoires[ligne][colonne].addVoisin(territoires[ligne-1][colonne]);
				}
				if (ligne != nblignes-1) {
					territoires[ligne][colonne].addVoisin(territoires[ligne+1][colonne]);
				}
				if (colonne != 0) {
					territoires[ligne][colonne].addVoisin(territoires[ligne][colonne-1]);
				}
				if (colonne != nbcolonnes-1) {
					territoires[ligne][colonne].addVoisin(territoires[ligne][colonne+1]);
				}
			}
		}
		System.out.println();
		System.out.println();
		System.out.println();

		return territoires;
	}
	
}
